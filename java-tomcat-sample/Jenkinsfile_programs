pipeline{
    agent any
    parameters{
        booleanParam(name: 'RELEASE', defaultValue: false, description: "nothing on my mind currently")
    }
    environment{
        RELEASE_version = '1.1.0'
        INT_Version = "R2"
    }
    stages{
        stage("to know the versions"){
            steps{
                getVersions()
            }
        }
        stage("unit tests"){
            steps{
                dir('./java-tomcat-sample'){
                    echo "executing unit tests"
                    sh '''
                    mvn test
                    '''
                }

            }
        }
        stage("build"){
            environment{
                Vesrion_suffix = getBuildVersion()
            }
            steps{
                echo "building version: ${INT_Version} with suffix ${Vesrion_suffix}"
                dir('./java-tomcat-sample'){
                    packageApllication()
                }
            }
        }
        stage("publish"){
            steps{
                archiveArtifacts('**/*.war')
            }
        }
    }
}

void getVersions(){
    sh '''
        echo "in init stage"
        mvn -version
        git --version
        java -version
        '''
}

String getBuildVersion(){
    if ( params.RELEASE) {
        return env.RELEASE_version + ':' + env.BUILD_NUMBER
    }
    else{
        return env.INT_Version + 'ci' + env.BUILD_NUMBER
    }
}

void packageApllication(){
    sh '''
        mvn versions:set -DnewVersion="${Vesrion_suffix}"-SNAPHSHOT
        mvn versions:update-child-modules
        mvn clean package
        '''
}


